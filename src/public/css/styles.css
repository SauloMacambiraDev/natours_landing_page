/*
    COLORS:

    Light green: #7ed56f;
    Medium green: #55c57a;
    Dark green: #28b485;

    Purle colors:

    Light purple: rgba(86, 7, 105)
    Medium purple: rgb(143, 12, 175)
    Dark purple: rgba(94, 18, 138, 0.8)

*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a{
    text-decoration: none;
    color: inherit
}

body{
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
}

header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url('/imgs/hero.jpg');
    /* Whatever the widht and height of the viewport, 'cover' always try to fit the image in its box */
    background-size: cover; 
    background-position: top;
    /* Taking x y coordinates, polygon function start form(topleft, topright, bottomright, bottomleft) because the polygon has 4 axes */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    /* clip-path: circle(55%) */
    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
    /* browser will figure the width out. No need to set up width property */
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* translate() Will shift the element -50% width and -50% of its element height */
    transform: translate(-50%, -50%);

    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase; /* Uppercase the text/content inside of that element */
    
    backface-visibility: hidden;
    
}

.heading-primary-main{
    /* span by default is an inline element */
    /* display: block occupy the entire width of parent element - breaking a line - and allow customization and its shape */
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation: moveInLeft 1s;

    animation-timing-function: ease-out;

    /* animation-name: moveInLeft; */
    /* animation-duration: 1s; */

    /* animation-delay how much time will wait until animation happens */
    /* animation-delay: 3s;  */

    /* animation-iteration-count define how many times the animation will be executed */
    /* animation-iteration-count: 3; */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    margin-bottom: 60px;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100%) ;
    }
    
    80% {
        
        transform: translateX(20px);
    }
    
    100% {
        transform: translateX(0);
        opacity: 1;
        /* transform:  rotate(360deg); */

    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100%);
    }
    
    80% {
        
        transform: translateX(-20px);
    }
    
    100% {
        transform: translateX(0);
        opacity: 1;
    }

}

.btn {
    text-transform: uppercase;
    padding: 15px 40px;
    border-radius: 50px;
    font-size: 18px;
    display: inline-block;
    position: relative;

    transition: all .2s;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.25);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,0.25);
    
}

.btn-white {
    background-color: #FFF;
    color: #777;
}

/* ::after creates a child element to .btn */
.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;

    z-index: -1;
    transition: all .2s;
}

.btn-white::after{
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    /* All Style effects of 0% will be applied to the element until the animation happens */
    animation-fill-mode: backwards;
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(100%);
    }
    
    
    100% {
        transform: translateX(0);
        opacity: 1;
    }

}